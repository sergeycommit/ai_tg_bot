version: "3.9"
services:
  gem_bot:
    build: .
    container_name: ${TG_BOT_NAME}
    depends_on:
      db:
        condition: service_healthy
    restart: always
    volumes:
      - ./voices:/voices
    ports:
      - "8199:80"
    networks:
      gem_net:
        ipv4_address: 172.55.61.11
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - OR_API_KEY=${OR_API_KEY}
      - HF_API_KEY=${HF_API_KEY}
      - MODEL=${MODEL}
      - ADMIN_USER_ID=${ADMIN_USER_ID}
      - CHANNEL=${CHANNEL}
      - CHANNEL_URL=${CHANNEL_URL}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=172.55.61.12
      - DB_PORT=5432
      - FREE_REQUESTS_PER_DAY=${FREE_REQUESTS_PER_DAY:-300}

  db:
    image: postgres:latest
    container_name: ${TG_BOT_NAME}_bd
    ports:
      - "5532"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ../postgres-backup:/backup
    networks:
      gem_net:
        ipv4_address: 172.55.61.12
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${TG_BOT_NAME}_pgadmin
    restart: unless-stopped
    ports:
      - "8091:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "tdallstr@yandex.ru"
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
    networks:
      gem_net:
        ipv4_address: 172.55.61.13

networks:
  gem_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.55.61.0/24